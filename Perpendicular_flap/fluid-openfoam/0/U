FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    object      U;
}

dimensions      [0 1 -1 0 0 0 0];

internalField   uniform (1 0 0);

boundaryField
{
    inlet
    {
        type            codedFixedValue;
        value           uniform (1 0 0);   //dummy value

        name            parabolicVelocity;  //dummy name
        code
        #{
            const vectorField& Cf=patch().Cf();  //Cf=face centre
            vectorField& field=*this;

            const scalar u_m=1;
            const scalar H=4;

            forAll(Cf,faceI)
            {
                const scalar y=Cf[faceI][1];
                field[faceI]=vector(6*u_m*(y/H)*(1-(y/H)),0,0);
            }

        #};
    }

    outlet
    {
        type            zeroGradient;
    }
    flap
    {
        type            movingWallVelocity;
        value           uniform (0 0 0);
    }
    upperWall
    {
        type            noSlip;
    }
    lowerWall
    {
        type            noSlip;
    }
    frontAndBack
    {
        type            empty;
    }
}
